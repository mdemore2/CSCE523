set(ur_res).
set(hyper_res).

formula_list(usable).



[Link,Zelda,Ganondorf].
[Octorock,IronKnucle,Poe].
[bow,magic,sword].

%weapons are bow, magic and sword
%good are Link, Zelda, Ganondorf
%bad are Octorock, Iron Knuckle, Poe


end_of_list.


formula_list(sos).

-fight(Ganondorf,Octorock).
fight(Zelda, Octorock).
has(Link,sword).
-fight(Link,Poe).
has(Zelda,bow).
-with(IronKnuckle,magic).


all x all y exists z ((with(y, z) & has(x, z)) -> fight(x, y)).
all x all y exists z ((has(x, z) & fight(x, y)) -> with(y, z)).
all x all y exists z ((with(y, z) & fight(x, y)) -> has(x, z)).

all x (fight(x, Octorock) <-> (-fight(x, IronKnuckle) & -fight(x, Poe))).
all x (fight(x, IronKnuckle) <-> (-fight(x, Octorock) & -fight(x, Poe))).
all x (fight(x, Poe) -> (-fight(x, Octorock) & -fight(x, IronKnuckle))).

all x (has(x, sword) <-> (-has(x, magic) & -has(x, bow))).
all x (has(x, magic) <-> (-has(x, sword) & -has(x, bow))).
all x (has(x, bow) <-> (-has(x, magic) & -has(x, sword))).

all x (with(x, magic) <-> (-with(x, sword) & -with(x, bow))).
all x (with(x, sword) <-> (-with(x, magic) & -with(x, bow))).
all x (with(x, bow) <-> (-with(x, sword) & -with(x, magic))).

exists y (with(Octorock, y) <-> (-with(IronKnuckle, y) & -with(Poe, y))).
exists y (with(IronKnuckle, y) <-> (-with(Octorock, y) & -with(Poe, y))).
exists y (with(Poe, y) <-> (-with(Octorock, y) & -with(IronKnuckle, y))).

all y (has(Link, y) <-> (-has(Zelda, y) & -has(Ganondorf, y))).
all y (has(Zelda, y) <-> (-has(Link, y) & -has(Ganondorf, y))).
all y (has(Ganondorf, y) <-> (-has(Link, y) & -has(Zelda, y))).

all y (fight(Link, y) <-> (-fight(Zelda, y) & -fight(Ganondorf, y))).
all y (fight(Zelda, y) <-> (-fight(Link, y) & -fight(Ganondorf, y))).
all y (fight(Ganondorf, y) <-> (-fight(Link, y) & -fight(Zelda, y))).

fight(Zelda, Octorock) & has(Zelda, bow) -> with(Octorock, bow).
fight(Link, IronKnuckle) & has(Link, sword) -> with(IronKnuckle, sword).
fight(Ganondorf, Poe) & has(Ganondorf, magic) -> with(Poe, magic).


end_of_list.